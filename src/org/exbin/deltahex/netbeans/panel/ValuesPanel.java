/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.deltahex.netbeans.panel;

import java.util.Arrays;
import org.exbin.deltahex.CaretMovedListener;
import org.exbin.deltahex.CaretPosition;
import org.exbin.deltahex.DataChangedListener;
import org.exbin.deltahex.Section;
import org.exbin.deltahex.swing.CodeArea;

/**
 * Values side panel.
 *
 * @version 0.1.5 2017/03/12
 * @author ExBin Project (http://exbin.org)
 */
public class ValuesPanel extends javax.swing.JPanel {

    private CodeArea codeArea;
    private final byte[] valuesCache = new byte[8];

    public ValuesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        endianButtonGroup = new javax.swing.ButtonGroup();
        integerSignButtonGroup = new javax.swing.ButtonGroup();
        binaryLabel = new javax.swing.JLabel();
        binaryCheckBox0 = new javax.swing.JCheckBox();
        binaryCheckBox1 = new javax.swing.JCheckBox();
        binaryCheckBox2 = new javax.swing.JCheckBox();
        binaryCheckBox3 = new javax.swing.JCheckBox();
        binaryCheckBox4 = new javax.swing.JCheckBox();
        binaryCheckBox5 = new javax.swing.JCheckBox();
        binaryCheckBox6 = new javax.swing.JCheckBox();
        binaryCheckBox7 = new javax.swing.JCheckBox();
        byteLabel = new javax.swing.JLabel();
        byteTextField = new javax.swing.JTextField();
        wordLabel = new javax.swing.JLabel();
        wordTextField = new javax.swing.JTextField();
        intLabel = new javax.swing.JLabel();
        intTextField = new javax.swing.JTextField();
        longLabel = new javax.swing.JLabel();
        longTextField = new javax.swing.JTextField();
        floatLabel = new javax.swing.JLabel();
        floatTextField = new javax.swing.JTextField();
        doubleLabel = new javax.swing.JLabel();
        doubleTextField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();
        characterLabel = new javax.swing.JLabel();
        characterTextField = new javax.swing.JTextField();
        littleEndianRadioButton = new javax.swing.JRadioButton();
        bigEndianRadioButton = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        signedRadioButton = new javax.swing.JRadioButton();
        signedRadioButton1 = new javax.swing.JRadioButton();

        org.openide.awt.Mnemonics.setLocalizedText(binaryLabel, "Binary");

        org.openide.awt.Mnemonics.setLocalizedText(byteLabel, "Byte");

        org.openide.awt.Mnemonics.setLocalizedText(wordLabel, "Word");

        org.openide.awt.Mnemonics.setLocalizedText(intLabel, "Integer");

        org.openide.awt.Mnemonics.setLocalizedText(longLabel, "Long");

        org.openide.awt.Mnemonics.setLocalizedText(floatLabel, "Float");

        org.openide.awt.Mnemonics.setLocalizedText(doubleLabel, "Double");

        org.openide.awt.Mnemonics.setLocalizedText(dateLabel, "Date");

        org.openide.awt.Mnemonics.setLocalizedText(characterLabel, "Character");

        endianButtonGroup.add(littleEndianRadioButton);
        littleEndianRadioButton.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(littleEndianRadioButton, "LE");
        littleEndianRadioButton.setToolTipText("Little Endian");
        littleEndianRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                littleEndianRadioButtonStateChanged(evt);
            }
        });

        endianButtonGroup.add(bigEndianRadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(bigEndianRadioButton, "BE");
        bigEndianRadioButton.setToolTipText("Big Endian");
        bigEndianRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bigEndianRadioButtonStateChanged(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        integerSignButtonGroup.add(signedRadioButton);
        signedRadioButton.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(signedRadioButton, "Sig");
        signedRadioButton.setToolTipText("Signed Integers");
        signedRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                signedRadioButtonStateChanged(evt);
            }
        });

        integerSignButtonGroup.add(signedRadioButton1);
        org.openide.awt.Mnemonics.setLocalizedText(signedRadioButton1, "Uns");
        signedRadioButton1.setToolTipText("Unsigned Integers");
        signedRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                signedRadioButton1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(byteLabel)
                            .addComponent(wordLabel)
                            .addComponent(intLabel)
                            .addComponent(longLabel)
                            .addComponent(binaryLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(binaryCheckBox0)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(binaryCheckBox7))
                            .addComponent(floatLabel)
                            .addComponent(doubleLabel)
                            .addComponent(dateLabel)
                            .addComponent(characterLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(littleEndianRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bigEndianRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(signedRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(signedRadioButton1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(byteTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wordTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(longTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floatTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doubleTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(characterTextField))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(binaryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(binaryCheckBox0)
                    .addComponent(binaryCheckBox1)
                    .addComponent(binaryCheckBox2)
                    .addComponent(binaryCheckBox3)
                    .addComponent(binaryCheckBox4)
                    .addComponent(binaryCheckBox5)
                    .addComponent(binaryCheckBox6)
                    .addComponent(binaryCheckBox7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(byteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(byteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(floatLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(floatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doubleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doubleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(characterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(characterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(littleEndianRadioButton)
                            .addComponent(bigEndianRadioButton))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(signedRadioButton)
                        .addComponent(signedRadioButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void littleEndianRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_littleEndianRadioButtonStateChanged
        updateValues();
    }//GEN-LAST:event_littleEndianRadioButtonStateChanged

    private void bigEndianRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bigEndianRadioButtonStateChanged
        updateValues();
    }//GEN-LAST:event_bigEndianRadioButtonStateChanged

    private void signedRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_signedRadioButtonStateChanged
        updateValues();
    }//GEN-LAST:event_signedRadioButtonStateChanged

    private void signedRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_signedRadioButton1StateChanged
        updateValues();
    }//GEN-LAST:event_signedRadioButton1StateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bigEndianRadioButton;
    private javax.swing.JCheckBox binaryCheckBox0;
    private javax.swing.JCheckBox binaryCheckBox1;
    private javax.swing.JCheckBox binaryCheckBox2;
    private javax.swing.JCheckBox binaryCheckBox3;
    private javax.swing.JCheckBox binaryCheckBox4;
    private javax.swing.JCheckBox binaryCheckBox5;
    private javax.swing.JCheckBox binaryCheckBox6;
    private javax.swing.JCheckBox binaryCheckBox7;
    private javax.swing.JLabel binaryLabel;
    private javax.swing.JLabel byteLabel;
    private javax.swing.JTextField byteTextField;
    private javax.swing.JLabel characterLabel;
    private javax.swing.JTextField characterTextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JLabel doubleLabel;
    private javax.swing.JTextField doubleTextField;
    private javax.swing.ButtonGroup endianButtonGroup;
    private javax.swing.JLabel floatLabel;
    private javax.swing.JTextField floatTextField;
    private javax.swing.JLabel intLabel;
    private javax.swing.JTextField intTextField;
    private javax.swing.ButtonGroup integerSignButtonGroup;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton littleEndianRadioButton;
    private javax.swing.JLabel longLabel;
    private javax.swing.JTextField longTextField;
    private javax.swing.JRadioButton signedRadioButton;
    private javax.swing.JRadioButton signedRadioButton1;
    private javax.swing.JLabel wordLabel;
    private javax.swing.JTextField wordTextField;
    // End of variables declaration//GEN-END:variables

    public void setCodeArea(CodeArea codeArea) {
        this.codeArea = codeArea;
        codeArea.addDataChangedListener(new DataChangedListener() {
            @Override
            public void dataChanged() {
                updateValues();
            }
        });
        codeArea.addCaretMovedListener(new CaretMovedListener() {
            @Override
            public void caretMoved(CaretPosition caretPosition, Section section) {
                updateValues();
            }
        });
    }

    private void updateValues() {
        CaretPosition caretPosition = codeArea.getCaretPosition();
        long dataPosition = caretPosition.getDataPosition();
        long dataSize = codeArea.getDataSize();
        if (dataPosition < dataSize) {
            int availableData = dataSize - dataPosition > 7 ? 8 : (int) (dataSize - dataPosition);
            codeArea.getData().copyToArray(dataPosition, valuesCache, 0, availableData);
            if (availableData < 8) {
                Arrays.fill(valuesCache, availableData, 8, (byte) 0);
            }
            populateValues();
        } else {
            clearValues();
        }
    }

    private void populateValues() {
        boolean signed = signedRadioButton.isSelected();
        boolean littleEndian = littleEndianRadioButton.isSelected();
        binaryCheckBox0.setSelected((valuesCache[0] & 0x80) > 0);
        binaryCheckBox1.setSelected((valuesCache[0] & 0x40) > 0);
        binaryCheckBox2.setSelected((valuesCache[0] & 0x20) > 0);
        binaryCheckBox3.setSelected((valuesCache[0] & 0x10) > 0);
        binaryCheckBox4.setSelected((valuesCache[0] & 0x8) > 0);
        binaryCheckBox5.setSelected((valuesCache[0] & 0x4) > 0);
        binaryCheckBox6.setSelected((valuesCache[0] & 0x2) > 0);
        binaryCheckBox7.setSelected((valuesCache[0] & 0x1) > 0);
        byteTextField.setText(String.valueOf(signed ? valuesCache[0] : valuesCache[0] & 0xff));
        wordTextField.setText(String.valueOf(signed
                ? (littleEndian ? (valuesCache[0] & 0xff) | (valuesCache[1] << 8) : (valuesCache[1] & 0xff) | (valuesCache[0] << 8))
                : (littleEndian ? (valuesCache[0] & 0xff) | ((valuesCache[1] & 0xff) << 8) : (valuesCache[1] & 0xff) | ((valuesCache[0] & 0xff) << 8))
        ));
    }

    private void clearValues() {
        binaryCheckBox0.setSelected(false);
        binaryCheckBox1.setSelected(false);
        binaryCheckBox2.setSelected(false);
        binaryCheckBox3.setSelected(false);
        binaryCheckBox4.setSelected(false);
        binaryCheckBox5.setSelected(false);
        binaryCheckBox6.setSelected(false);
        binaryCheckBox7.setSelected(false);
        byteTextField.setText("");
        wordTextField.setText("");
        intTextField.setText("");
        longTextField.setText("");
        floatTextField.setText("");
        doubleTextField.setText("");
        dateTextField.setText("");
        characterTextField.setText("");
    }
}
